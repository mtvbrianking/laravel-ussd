#!/usr/bin/env php
<?php

declare(strict_types=1);

$dir = __DIR__.'/../vendor';

if (! file_exists($dir.'/autoload.php')) {
    $dir = __DIR__.'/../../..';
}

if (! file_exists($dir.'/autoload.php')) {
    echo 'Autoload not found.';
    exit(1);
}

require $dir.'/autoload.php';

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputDefinition;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

class Simulator extends Command
{
    protected function configure(): void
    {
        $this
            ->setName($_SERVER['argv'][0])
            ->setDefinition(
                new InputDefinition([
                    new InputArgument('phone', InputArgument::REQUIRED, 'MSISDN'),
                    new InputOption('--dail', '-d', InputOption::VALUE_OPTIONAL, 'User request'),
                    new InputOption('--service', '-s', InputOption::VALUE_REQUIRED, 'USSD shortcode', '*156#'),
                    new InputOption('--network', '-n', InputOption::VALUE_OPTIONAL, 'Network code', '6001'),
                    new InputOption('--session', '-z', InputOption::VALUE_OPTIONAL, 'Session ID (Auto Gen)'),
                    new InputOption('--api', '-a', InputOption::VALUE_REQUIRED, 'API URI', 'http://localhost:8000/api/ussd'),
                ])
            );
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $api = $input->getOption('api');
        $session = $input->getOption('session') ?? uniqid();
        $phone = $input->getArgument('phone');
        $service = $input->getOption('service');
        $dail = $input->getOption('dail') ?? $service;

        $output->writeln("Dail {$dail} on {$phone}");

        // dd([
        //     'arguments' => $input->getArguments(),
        //     'options' => $input->getOptions()
        // ]);

        return Command::SUCCESS;
    }
}

/**
 * @see https://symfony.com/doc/current/components/console/single_command_tool.html
 */
$app = new Application('USSD Simulator', '1.0.0');

$Simulator = new Simulator();

$app->add($Simulator);

$app->setDefinition(new InputDefinition([
    new InputOption('--help', '-h', InputOption::VALUE_NONE, "Display usage information"),
    new InputOption('--version', '-V', InputOption::VALUE_NONE, "Display application version"),
]));

$app->setDefaultCommand($Simulator->getName(), true);

$app->run();
